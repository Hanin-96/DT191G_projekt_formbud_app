@page "/product/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>Product</PageTitle>

<h3>Product ID: @Id</h3>
<EditForm Model=@bidRequest OnSubmit=@FormSubmitted class="bid-form-container">
    <h2 class="form-title">Lägg till nytt bud</h2>
    <div class="bid-form">
        <div>
            <label>Namn:</label>
            <InputText @bind-Value=bidRequest.BuyerName class="form-control" id="BuyerName" />
        </div>

        <div>
            <label>E-post:</label>
            <input type="email" @bind-value=bidRequest.BuyerEmail class="form-control" id="BuyerEmail" />
        </div>

        <div>
            <label>Telefon:</label>
            <input type="tel" @bind-value=bidRequest.BuyerPhone class="form-control" id="BuyerPhone" />
        </div>

        <div>
            <label>Bud:</label>
            <InputNumber @bind-Value=bidRequest.Price class="form-control" id="Price" />
        </div>
    </div>

    <input type="submit" class="btn-submit" value="Lägg bud" />
</EditForm>
@if (bidList != null)
{
    <div class="table-wrap">

        <table class="table">

            <tbody>
                @foreach (var bid in bidList)
                {
                    <tr>
                        <td>@bid.BuyerId</td>
                        <td>@bid.Price</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    //Produkts id som hämtas från url
    [Parameter]
    public int Id { get; set; }

    //Modell för formulär som skickas in
    private BidRequest bidRequest = new BidRequest();
    //En lista på en produkts bud
    private Bid[]? bidList;

    //Onload funktion som körs vid laddning
    protected override void OnInitialized()
    {
        //Sätter bidRequest produktId till Id som hämtas i url
        bidRequest.ProductId = Id;

    }

    //Vid asykront laddning ska en lista av bids hämtas med GET anrop
    protected override async Task OnInitializedAsync()
    {
        bidList = await Http.GetFromJsonAsync<Bid[]>("http://localhost:5021/api/bid/" + Id);

    }

    //Skickar formuläret via POST anrop till API:et
    private async Task FormSubmitted(EditContext editContext)
    {
        //Validerar om formuläret är korrekt
        bool formIsValid = editContext.Validate();

        //om valideringen är korrekt
        if (formIsValid)
        {
            //Skapa ny HttpClient och lägger ett bud
            HttpClient httpClient = new HttpClient();
            var response = await httpClient.PostAsJsonAsync("http://localhost:5021/api/bid", bidRequest);
            if (response.StatusCode == System.Net.HttpStatusCode.Created)
            {
                //Laddar om sidan om budet gick att skicka in
                NavManager.NavigateTo(NavManager.Uri, true);
            }
        }
    }

    //Modell för bidrequest
    public class BidRequest
    {
        //Properties
        public string? BuyerName { get; set; }
        public string? BuyerEmail { get; set; }
        public string? BuyerPhone { get; set; }
        public int ProductId { get; set; }
        public int Price { get; set; }
    }

    //Modell för Bid
    public class Bid
    {
        public int Price { get; set; }
        public int? BuyerId { get; set; }
    }
}
